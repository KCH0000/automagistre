pipeline:
  clone:
    image: plugins/git
    depth: 2

  check:
    image: docker
    commands:
      - echo -e "$MD5_LIST" | md5sum -wc

  cs:
    image: grachev/php-cs-fixer
    commands:
      - >-
        php-cs-fixer fix
        --config=.php_cs.dist
        --verbose
        --dry-run
        --using-cache=no
        --path-mode=intersection
        `git diff --name-only --diff-filter=ACMRTUXB HEAD^`

  build:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - source .drone.env
      - >-
        docker build -t "$IMAGE_BUILD"
        --file docker/Dockerfile
        --label branch="$DRONE_COMMIT_BRANCH"
        --build-arg GITHUB_AUTH_TOKEN="$GITHUB_AUTH_TOKEN" .

  phpstan:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - source .drone.env
      - >-
        docker run --rm "$IMAGE_BUILD"
        php -d display_errors=on vendor/bin/phpstan analyse --level 5 --configuration phpstan.neon --no-progress src tests

  test:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - source .drone.env
      - while ! nc -z 127.0.0.1 3306; do sleep 1; done
      - >-
        docker run --rm --network "container:$HOSTNAME"
        -e APP_ENV=test
        -e APP_DEBUG=0
        -e FIXTURES=false
        -e MIGRATION=false
        -e DATABASE_HOST=mysql
        -e DATABASE_PORT=3306
        -e DATABASE_NAME=symfony
        -e DATABASE_USER=root
        -e DATABASE_PASSWORD=''
        -e MAILER_TRANSPORT=smtp
        -e MAILER_HOST=127.0.0.1
        -e MAILER_USER=''
        -e MAILER_PASSWORD=''
        -e SECRET=ThisIsNotSecureSecretOnlyForTest
        "$IMAGE_BUILD"

  publish:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - source .drone.env
      - docker login -u"$HUB_LOGIN" -p"$HUB_PASSWORD" registry.gitlab.com
      - docker tag "$IMAGE_BUILD" "$IMAGE_PUSH"
      - docker push "$IMAGE_PUSH" > /dev/null
      - >+
        if [ "master" == "$DRONE_COMMIT_BRANCH" ]; then
          docker rmi --force "$IMAGE_PUSH"

          docker tag "$IMAGE_BUILD" "$IMAGE_LATEST"
          docker push "$IMAGE_LATEST" > /dev/null
        fi
    when:
      event: push

  clean:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - source .drone.env
      - >+
        if [ "success" == "$DRONE_BUILD_STATUS" ] && [ "push" == "$DRONE_BUILD_EVENT" ]; then
          (docker rmi `docker images -q --filter before="$IMAGE_BUILD" --filter label="branch=$DRONE_COMMIT_BRANCH" "$IMAGE"`)
        fi
      - docker rmi --force "$IMAGE_BUILD"
    when:
      status: [ failure, success ]

  deploy:
    image: docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    commands:
      - source .drone.env
      - source .drone.ssh
      - ssh "$DEPLOY_HOST" docker service update --image "$IMAGE_PUSH" "$DEPLOY_SERVICE"
      - ssh "$DEPLOY_HOST" docker rmi `docker images -q --filter "before=$IMAGE_PUSH" "$IMAGE"` 2> /dev/null || true
    when:
      branch: master

services:
  mysql:
    image: mariadb
    environment:
      MYSQL_DATABASE: symfony
      MYSQL_ALLOW_EMPTY_PASSWORD: true

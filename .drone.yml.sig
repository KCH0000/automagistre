eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgY2xvbmU6CiAgICBpbWFnZTogcGx1Z2lucy9naXQKICAgIGRlcHRoOiAyCgogIGNoZWNrOgogICAgaW1hZ2U6IGRvY2tlcgogICAgY29tbWFuZHM6CiAgICAgIC0gZWNobyAtZSAiJE1ENV9MSVNUIiB8IG1kNXN1bSAtd2MKCiAgY3M6CiAgICBpbWFnZTogZ3JhY2hldi9waHAtY3MtZml4ZXIKICAgIGNvbW1hbmRzOgogICAgICAtID4tCiAgICAgICAgcGhwLWNzLWZpeGVyIGZpeAogICAgICAgIC0tY29uZmlnPS5waHBfY3MuZGlzdAogICAgICAgIC0tdmVyYm9zZQogICAgICAgIC0tZHJ5LXJ1bgogICAgICAgIC0tdXNpbmctY2FjaGU9bm8KICAgICAgICAtLXBhdGgtbW9kZT1pbnRlcnNlY3Rpb24KICAgICAgICBgZ2l0IGRpZmYgLS1uYW1lLW9ubHkgLS1kaWZmLWZpbHRlcj1BQ01SVFVYQiBIRUFEXmAKICBlbnY6CiAgICBpbWFnZTogYWxwaW5lCiAgICBjb21tYW5kczoKICAgICAgLSBlbnYKCiAgYnVpbGQ6CiAgICBpbWFnZTogZG9ja2VyCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgICBjb21tYW5kczoKICAgICAgLSBzb3VyY2UgLmRyb25lLmVudgogICAgICAtID4tCiAgICAgICAgZG9ja2VyIGJ1aWxkIC10ICIkSU1BR0VfQlVJTEQiCiAgICAgICAgLS1maWxlIGRvY2tlci9Eb2NrZXJmaWxlCiAgICAgICAgLS1sYWJlbCBicmFuY2g9IiREUk9ORV9DT01NSVRfQlJBTkNIIgogICAgICAgIC0tYnVpbGQtYXJnIEdJVEhVQl9BVVRIX1RPS0VOPSIkR0lUSFVCX0FVVEhfVE9LRU4iIC4KCiAgcGhwc3RhbjoKICAgIGltYWdlOiBkb2NrZXIKICAgIHZvbHVtZXM6CiAgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICAgIGNvbW1hbmRzOgogICAgICAtIHNvdXJjZSAuZHJvbmUuZW52CiAgICAgIC0gPi0KICAgICAgICBkb2NrZXIgcnVuIC0tcm0gIiRJTUFHRV9CVUlMRCIKICAgICAgICBwaHBzdGFuIGFuYWx5c2UgLS1sZXZlbCA1IC0tY29uZmlndXJhdGlvbiBwaHBzdGFuLm5lb24gLS1uby1wcm9ncmVzcyBzcmMgdGVzdHMKCiAgc3ltZm9ueV9yZXF1aXJlbWVudHM6CiAgICBpbWFnZTogZG9ja2VyCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgICBjb21tYW5kczoKICAgICAgLSBzb3VyY2UgLmRyb25lLmVudgogICAgICAtID4tCiAgICAgICAgZG9ja2VyIHJ1biAtLXJtICIkSU1BR0VfQlVJTEQiIHN5bWZvbnlfcmVxdWlyZW1lbnRzCgogIHlhbWxfbGludDoKICAgIGltYWdlOiBkb2NrZXIKICAgIHZvbHVtZXM6CiAgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICAgIGNvbW1hbmRzOgogICAgICAtIHNvdXJjZSAuZHJvbmUuZW52CiAgICAgIC0gPi0KICAgICAgICBkb2NrZXIgcnVuIC0tcm0gIiRJTUFHRV9CVUlMRCIgY29uc29sZSBsaW50OnlhbWwgZXRjCgogIGRvY3RyaW5lX3ZhbGlkYXRpb246CiAgICBpbWFnZTogZG9ja2VyCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgICBjb21tYW5kczoKICAgICAgLSBzb3VyY2UgLmRyb25lLmVudgogICAgICAtIHdoaWxlICEgbmMgLXogMTI3LjAuMC4xIDMzMDY7IGRvIHNsZWVwIDE7IGRvbmUKICAgICAgLSA-LQogICAgICAgIGRvY2tlciBydW4gLS1ybSAiJElNQUdFX0JVSUxEIiBjb25zb2xlIGRvY3RyaW5lOnNjaGVtYTp2YWxpZGF0ZSAtLXNraXAtc3luYwoKICBwaHB1bml0OgogICAgaW1hZ2U6IGRvY2tlcgogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogICAgY29tbWFuZHM6CiAgICAgIC0gc291cmNlIC5kcm9uZS5lbnYKICAgICAgLSA-LQogICAgICAgIGRvY2tlciBydW4gLS1ybSAtLW5ldHdvcmsgImNvbnRhaW5lcjokSE9TVE5BTUUiCiAgICAgICAgLWUgQVBQX0VOVj10ZXN0CiAgICAgICAgLWUgQVBQX0RFQlVHPTAKICAgICAgICAtZSBGSVhUVVJFUz1mYWxzZQogICAgICAgIC1lIE1JR1JBVElPTj1mYWxzZQogICAgICAgIC1lIERBVEFCQVNFX0hPU1Q9bXlzcWwKICAgICAgICAtZSBEQVRBQkFTRV9QT1JUPTMzMDYKICAgICAgICAtZSBEQVRBQkFTRV9OQU1FPXN5bWZvbnkKICAgICAgICAtZSBEQVRBQkFTRV9VU0VSPXJvb3QKICAgICAgICAtZSBEQVRBQkFTRV9QQVNTV09SRD0nJwogICAgICAgIC1lIE1BSUxFUl9UUkFOU1BPUlQ9c210cAogICAgICAgIC1lIE1BSUxFUl9IT1NUPTEyNy4wLjAuMQogICAgICAgIC1lIE1BSUxFUl9VU0VSPScnCiAgICAgICAgLWUgTUFJTEVSX1BBU1NXT1JEPScnCiAgICAgICAgLWUgU0VDUkVUPVRoaXNJc05vdFNlY3VyZVNlY3JldE9ubHlGb3JUZXN0CiAgICAgICAgIiRJTUFHRV9CVUlMRCIgcGhwdW5pdAoKICBwdWJsaXNoOgogICAgaW1hZ2U6IGRvY2tlcgogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogICAgY29tbWFuZHM6CiAgICAgIC0gc291cmNlIC5kcm9uZS5lbnYKICAgICAgLSBkb2NrZXIgbG9naW4gLXUiJEhVQl9MT0dJTiIgLXAiJEhVQl9QQVNTV09SRCIgcmVnaXN0cnkuZ2l0bGFiLmNvbQogICAgICAtIGRvY2tlciB0YWcgIiRJTUFHRV9CVUlMRCIgIiRJTUFHRV9QVVNIIgogICAgICAtIGRvY2tlciBwdXNoICIkSU1BR0VfUFVTSCIgPiAvZGV2L251bGwKICAgICAgLSA-KwogICAgICAgIGlmIFsgIm1hc3RlciIgPT0gIiREUk9ORV9DT01NSVRfQlJBTkNIIiBdOyB0aGVuCiAgICAgICAgICBkb2NrZXIgcm1pIC0tZm9yY2UgIiRJTUFHRV9QVVNIIgoKICAgICAgICAgIGRvY2tlciB0YWcgIiRJTUFHRV9CVUlMRCIgIiRJTUFHRV9MQVRFU1QiCiAgICAgICAgICBkb2NrZXIgcHVzaCAiJElNQUdFX0xBVEVTVCIgPiAvZGV2L251bGwKICAgICAgICBmaQogICAgd2hlbjoKICAgICAgZXZlbnQ6IHB1c2gKCiAgY2xlYW46CiAgICBpbWFnZTogZG9ja2VyCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgICBjb21tYW5kczoKICAgICAgLSBzb3VyY2UgLmRyb25lLmVudgogICAgICAtID4rCiAgICAgICAgaWYgWyAic3VjY2VzcyIgPT0gIiREUk9ORV9CVUlMRF9TVEFUVVMiIF0gJiYgWyAicHVzaCIgPT0gIiREUk9ORV9CVUlMRF9FVkVOVCIgXTsgdGhlbgogICAgICAgICAgKGRvY2tlciBybWkgYGRvY2tlciBpbWFnZXMgLXEgLS1maWx0ZXIgYmVmb3JlPSIkSU1BR0VfQlVJTEQiIC0tZmlsdGVyIGxhYmVsPSJicmFuY2g9JERST05FX0NPTU1JVF9CUkFOQ0giICIkSU1BR0UiYCkKICAgICAgICBmaQogICAgICAtIGRvY2tlciBybWkgLS1mb3JjZSAiJElNQUdFX0JVSUxEIgogICAgd2hlbjoKICAgICAgc3RhdHVzOiBbIGZhaWx1cmUsIHN1Y2Nlc3MgXQoKICBkZXBsb3k6CiAgICBpbWFnZTogYXBwbGVib3kvZHJvbmUtc3NoCiAgICBob3N0OiAke0RFUExPWV9IT1NUfQogICAga2V5OiAke0RFUExPWV9LRVl9CiAgICBjb21tYW5kczoKICAgICAgLSBzb3VyY2UgLmRyb25lLmVudgogICAgICAtIHNzaCAiJERFUExPWV9IT1NUIiBkb2NrZXIgc2VydmljZSB1cGRhdGUgLS1pbWFnZSAiJElNQUdFX1BVU0giICIkREVQTE9ZX1NFUlZJQ0UiCiAgICAgIC0gc3NoICIkREVQTE9ZX0hPU1QiIGRvY2tlciBybWkgYGRvY2tlciBpbWFnZXMgLXEgLS1maWx0ZXIgImJlZm9yZT0kSU1BR0VfUFVTSCIgIiRJTUFHRSJgIDI-IC9kZXYvbnVsbCB8fCB0cnVlCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgoKc2VydmljZXM6CiAgbXlzcWw6CiAgICBpbWFnZTogbWFyaWFkYgogICAgZW52aXJvbm1lbnQ6CiAgICAgIE1ZU1FMX0RBVEFCQVNFOiBzeW1mb255CiAgICAgIE1ZU1FMX0FMTE9XX0VNUFRZX1BBU1NXT1JEOiB0cnVlCg.0SE742i8MCmlOzi66SDyCrgT426GdYHn6rf7b1-nKGo
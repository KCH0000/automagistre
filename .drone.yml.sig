eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CiAgY2xvbmU6CiAgICBpbWFnZTogcGx1Z2lucy9naXQKICAgIGRlcHRoOiAyCgogIGNoZWNrOgogICAgaW1hZ2U6IGRvY2tlcgogICAgY29tbWFuZHM6CiAgICAgIC0gZWNobyAtZSAiJE1ENV9MSVNUIiB8IG1kNXN1bSAtd2MKCiAgY3M6CiAgICBpbWFnZTogZ3JhY2hldi9waHAtY3MtZml4ZXIKICAgIGNvbW1hbmRzOgogICAgICAtID4tCiAgICAgICAgcGhwLWNzLWZpeGVyIGZpeAogICAgICAgIC0tY29uZmlnPS5waHBfY3MuZGlzdAogICAgICAgIC0tdmVyYm9zZQogICAgICAgIC0tZHJ5LXJ1bgogICAgICAgIC0tdXNpbmctY2FjaGU9bm8KICAgICAgICAtLXBhdGgtbW9kZT1pbnRlcnNlY3Rpb24KICAgICAgICBgZ2l0IGRpZmYgLS1uYW1lLW9ubHkgLS1kaWZmLWZpbHRlcj1BQ01SVFVYQiBIRUFEXmAKCiAgYnVpbGQ6CiAgICBpbWFnZTogZG9ja2VyCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgICBjb21tYW5kczoKICAgICAgLSA-LQogICAgICAgIGRvY2tlciBidWlsZCAtdCAiJERST05FX1JFUE9fTkFNRTokRFJPTkVfQlVJTERfTlVNQkVSIgogICAgICAgIC0tZmlsZSBkb2NrZXIvRG9ja2VyZmlsZQogICAgICAgIC0tbGFiZWwgYnJhbmNoPSIkRFJPTkVfQ09NTUlUX0JSQU5DSCIKICAgICAgICAtLWJ1aWxkLWFyZyBHSVRIVUJfQVVUSF9UT0tFTj0iJEdJVEhVQl9BVVRIX1RPS0VOIiAuCgogIHBocHN0YW46CiAgICBpbWFnZTogZG9ja2VyCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgICBjb21tYW5kczoKICAgICAgLSA-LQogICAgICAgIGRvY2tlciBydW4gLS1ybSAtZSBTS0lQX0VOVFJZUE9JTlQ9dHJ1ZSAiJERST05FX1JFUE9fTkFNRTokRFJPTkVfQlVJTERfTlVNQkVSIgogICAgICAgIHBocHN0YW4gYW5hbHlzZSAtLWxldmVsIDUgLS1jb25maWd1cmF0aW9uIHBocHN0YW4ubmVvbiAtLW5vLXByb2dyZXNzIHNyYyB0ZXN0cwoKICBzeW1mb255X3JlcXVpcmVtZW50czoKICAgIGltYWdlOiBkb2NrZXIKICAgIHZvbHVtZXM6CiAgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBydW4gLS1ybSAtZSBTS0lQX0VOVFJZUE9JTlQ9dHJ1ZSAiJERST05FX1JFUE9fTkFNRTokRFJPTkVfQlVJTERfTlVNQkVSIiBzeW1mb255X3JlcXVpcmVtZW50cwoKICB5YW1sX2xpbnQ6CiAgICBpbWFnZTogZG9ja2VyCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgcnVuIC0tcm0gIiRTWU1GT05ZX1RFU1RfRU5WIiAiJERST05FX1JFUE9fTkFNRTokRFJPTkVfQlVJTERfTlVNQkVSIiBjb25zb2xlIGxpbnQ6eWFtbCBldGMKCiAgZG9jdHJpbmVfdmFsaWRhdGlvbjoKICAgIGltYWdlOiBkb2NrZXIKICAgIHZvbHVtZXM6CiAgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICAgIGNvbW1hbmRzOgogICAgICAtIHdoaWxlICEgbmMgLXogMTI3LjAuMC4xIDMzMDY7IGRvIHNsZWVwIDE7IGRvbmUKICAgICAgLSBkb2NrZXIgcnVuIC0tcm0gIiRTWU1GT05ZX1RFU1RfRU5WIiAiJERST05FX1JFUE9fTkFNRTokRFJPTkVfQlVJTERfTlVNQkVSIiBjb25zb2xlIGRvY3RyaW5lOnNjaGVtYTp2YWxpZGF0ZSAtLXNraXAtc3luYwoKICBwaHB1bml0OgogICAgaW1hZ2U6IGRvY2tlcgogICAgdm9sdW1lczoKICAgICAgLSAvdmFyL3J1bi9kb2NrZXIuc29jazovdmFyL3J1bi9kb2NrZXIuc29jawogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIHJ1biAtLXJtIC0tbmV0d29yayAiY29udGFpbmVyOiRIT1NUTkFNRSIgIiRTWU1GT05ZX1RFU1RfRU5WIiAiJERST05FX1JFUE9fTkFNRTokRFJPTkVfQlVJTERfTlVNQkVSIiBwaHB1bml0CgogIHB1Ymxpc2g6CiAgICBpbWFnZTogZG9ja2VyCiAgICB2b2x1bWVzOgogICAgICAtIC92YXIvcnVuL2RvY2tlci5zb2NrOi92YXIvcnVuL2RvY2tlci5zb2NrCiAgICBjb21tYW5kczoKICAgICAgLSBkb2NrZXIgbG9naW4gLXUiJEhVQl9MT0dJTiIgLXAiJEhVQl9QQVNTV09SRCIgcmVnaXN0cnkuZ2l0bGFiLmNvbQogICAgICAtIGRvY2tlciB0YWcgIiREUk9ORV9SRVBPX05BTUU6JERST05FX0JVSUxEX05VTUJFUiIgInJlZ2lzdHJ5LmdpdGxhYi5jb20vJERST05FX1JFUE86JERST05FX0JVSUxEX05VTUJFUiIKICAgICAgLSBkb2NrZXIgcHVzaCAicmVnaXN0cnkuZ2l0bGFiLmNvbS8kRFJPTkVfUkVQTzokRFJPTkVfQlVJTERfTlVNQkVSIiA-IC9kZXYvbnVsbAogICAgICAtID4rCiAgICAgICAgaWYgWyAibWFzdGVyIiA9PSAiJERST05FX0NPTU1JVF9CUkFOQ0giIF07IHRoZW4KICAgICAgICAgIGRvY2tlciBybWkgLS1mb3JjZSAicmVnaXN0cnkuZ2l0bGFiLmNvbS8kRFJPTkVfUkVQTzokRFJPTkVfQlVJTERfTlVNQkVSIgoKICAgICAgICAgIGRvY2tlciB0YWcgIiREUk9ORV9SRVBPX05BTUU6JERST05FX0JVSUxEX05VTUJFUiIgInJlZ2lzdHJ5LmdpdGxhYi5jb20vJERST05FX1JFUE86bGF0ZXN0IgogICAgICAgICAgZG9ja2VyIHB1c2ggInJlZ2lzdHJ5LmdpdGxhYi5jb20vJERST05FX1JFUE86bGF0ZXN0IiA-IC9kZXYvbnVsbAogICAgICAgIGZpCiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAoKICBjbGVhbjoKICAgIGltYWdlOiBkb2NrZXIKICAgIHZvbHVtZXM6CiAgICAgIC0gL3Zhci9ydW4vZG9ja2VyLnNvY2s6L3Zhci9ydW4vZG9ja2VyLnNvY2sKICAgIGNvbW1hbmRzOgogICAgICAtID4rCiAgICAgICAgaWYgWyAic3VjY2VzcyIgPT0gIiREUk9ORV9CVUlMRF9TVEFUVVMiIF0gJiYgWyAicHVzaCIgPT0gIiREUk9ORV9CVUlMRF9FVkVOVCIgXTsgdGhlbgogICAgICAgICAgKGRvY2tlciBybWkgYGRvY2tlciBpbWFnZXMgLXEgLS1maWx0ZXIgYmVmb3JlPSIkRFJPTkVfUkVQT19OQU1FOiREUk9ORV9CVUlMRF9OVU1CRVIiIC0tZmlsdGVyIGxhYmVsPSJicmFuY2g9JERST05FX0NPTU1JVF9CUkFOQ0giICIkSU1BR0UiYCkKICAgICAgICBmaQogICAgICAtIGRvY2tlciBybWkgLS1mb3JjZSAiJERST05FX1JFUE9fTkFNRTokRFJPTkVfQlVJTERfTlVNQkVSIgogICAgd2hlbjoKICAgICAgc3RhdHVzOiBbIGZhaWx1cmUsIHN1Y2Nlc3MgXQoKICBkZXBsb3k6CiAgICBpbWFnZTogYXBwbGVib3kvZHJvbmUtc3NoCiAgICBob3N0OiAke0RFUExPWV9IT1NUfQogICAga2V5OiAke0RFUExPWV9LRVl9CiAgICBjb21tYW5kczoKICAgICAgLSBzc2ggIiRERVBMT1lfSE9TVCIgZG9ja2VyIHNlcnZpY2UgdXBkYXRlIC0taW1hZ2UgInJlZ2lzdHJ5LmdpdGxhYi5jb20vJERST05FX1JFUE86JERST05FX0JVSUxEX05VTUJFUiIgIiRERVBMT1lfU0VSVklDRSIKICAgICAgLSBzc2ggIiRERVBMT1lfSE9TVCIgZG9ja2VyIHJtaSBgZG9ja2VyIGltYWdlcyAtcSAtLWZpbHRlciAiYmVmb3JlPXJlZ2lzdHJ5LmdpdGxhYi5jb20vJERST05FX1JFUE86JERST05FX0JVSUxEX05VTUJFUiIgIiRJTUFHRSJgIDI-IC9kZXYvbnVsbCB8fCB0cnVlCiAgICB3aGVuOgogICAgICBicmFuY2g6IG1hc3RlcgoKc2VydmljZXM6CiAgbXlzcWw6CiAgICBpbWFnZTogbWFyaWFkYgogICAgZW52aXJvbm1lbnQ6CiAgICAgIE1ZU1FMX0RBVEFCQVNFOiBzeW1mb255CiAgICAgIE1ZU1FMX0FMTE9XX0VNUFRZX1BBU1NXT1JEOiB0cnVlCg.EHAvAs-QWqVcjUcsId2fYltECXr71_1nr4-2n8u8r24